# 1. 登录界面

（1）完成登录注册页面

（2）给页面添加背景色

（3）点击输入框提示输入信息

![image-20200113213923707](C:\Users\Jeffery\AppData\Roaming\Typora\typora-user-images\image-20200113213923707.png)

```javascript
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<!-- 引入jquery -->
<script type="text/javascript"	src="jquery-1.7.2.js"></script>

<style type="text/css">
	body{
		background-color: pink;
	}
</style>

<script type="text/javascript">

	/*  
		$(function(){}) 相当于  window.onload=function(){}
	*/
	$(function(){
		//通过id获取注册按钮的对象并设置点击事件
		$("#submit").click(function(){
			//校验文本框中的数据
			//1.通过id获取input的对象
			var username = $("#username").val();
			var pwd = $("#pwd").val();
			var rpwd = $("#rpwd").val();
			var email = $("#email").val();

			//2.校验 - 正则表达式
			var usernameReg = /^[a-z0-9_-]{3,16}$/; //没有双引号
			var pwdReg = /^[a-z0-9_-]{6,18}$/; //没有双引号
			var emailReg = /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/; //没有双引号
			if(!usernameReg.test(username)){//检测字符串username是否满足usernameReg的规则，满足返回true
				alert("用户名格式不正确");
				return false; //取消该注册的事件
			}else if(!pwdReg.test(pwd)){
				alert("密码格式不正确");
				return false; //取消该注册的事件
			}else if(!emailReg.test(email)){
				alert("email格式不正确");
				return false; //取消该注册的事件
			}else if(pwd != rpwd){
				alert("两次密码输入不一致");
				return false; //取消该注册的事件
			}else{
				alert("注册成功！！！");
			}
			
				
		});
	});
</script>
</head>
<body>
	
	<h1>欢迎注册</h1>
	<form action="../success2.html">
		
		用户名称 : <input type="text" name="username" id="username"><br>
		用户密码 : <input type="password" name="pwd" id="pwd"><br>
		确认密码 : <input type="password" name="rpwd" id="rpwd"><br>
		用户邮箱 : <input type="text" name="email" id="email"><br>
	
		<input id="submit" type="submit" value="注册">
	</form>
</body>
</html>
```

# 2. 登录界面改进

较前者加入输入栏右侧校验提示。

1. register. jsp 

```jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style type="text/css">
body {
	background-color: pink;
}
</style>
</head>
<body>
	<h1>Welcome registering!!!</h1>
	<form action="RegisterServlet" method="get">
		ID: 		<input type="text" name = "username"><span><%=request.getAttribute("idmsg")==null?"":request.getAttribute("idmsg") %></span><br> 
		Password:	<input type="password" name = "password"><span><%=request.getAttribute("pwdmsg")==null?"":request.getAttribute("pwdmsg") %></span><br> 
		Confirm: 	<input type="password" name = "repassword"><span><%=request.getAttribute("repwdmsg")==null?"":request.getAttribute("repwdmsg") %></span><br> 
		Email:		<input type="text" name = "email"><span><%=request.getAttribute("emailmsg")==null?"":request.getAttribute("emailmsg") %></span><br> 
					<input type="submit">
	</form>
</body>
</html>
```

2. success. jsp

```jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	success
	<form action="PrintServlet" method="post">
		<input type="submit" value="click here">
	</form>
</body>
</html>
```

3. RegisterServlet. java 

```java
package com.atguigu.service;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class RegisterServlet
 */
public class RegisterServlet extends HttpServlet {
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String username = request.getParameter("username");
		String password = request.getParameter("password");
		String repassword = request.getParameter("repassword");
		String email = request.getParameter("email");
		
		String usernameReg = "^[a-z0-9_-]{3,16}$";
		String passwordReg = "^[a-z0-9_-]{6,18}$";
		String emailReg = "^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$";
		
		if (!username.matches(usernameReg)) {
			request.setAttribute("idmsg", "ID format error");
			RequestDispatcher rd = request.getRequestDispatcher("register.jsp");
			rd.forward(request, response);
		}else if(!password.matches(passwordReg)) {
			request.setAttribute("pwdmsg", "Password format error");
			RequestDispatcher rd = request.getRequestDispatcher("register.jsp");
			rd.forward(request, response);
		}else if(password == null) {
			request.setAttribute("pwdmsg", "Password cannot be null");
			RequestDispatcher rd = request.getRequestDispatcher("register.jsp");
			rd.forward(request, response);
		}else if(!password.equals(repassword)) {
			request.setAttribute("repwdmsg", "Password not match");
			RequestDispatcher rd = request.getRequestDispatcher("register.jsp");
			rd.forward(request, response);
		}else if(!email.matches(emailReg)) {
			request.setAttribute("emailmsg", "ID format error");
			RequestDispatcher rd = request.getRequestDispatcher("register.jsp");
			rd.forward(request, response);
		}else {
			RequestDispatcher rd = request.getRequestDispatcher("success.jsp");
			rd.forward(request, response);
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
```

# 3. 登录界面进一步改进

使用 ajax 实现异步用户名验证，并加入了数据库查询部分。

1. 数据库访问部分代码DAO（注意配置好数据库运行环境，启动 SQLyog，将 mySQL 的驱动 jar 包放入lib文件夹）：

```java
// 接口
public interface UserDao {
	/**
	 * 	查询用户名是否存在
	 */
	boolean checkUserName(String username);
}

// 接口实现类
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class UserDaoImplmt implements UserDao {

	@Override
	public boolean checkUserName(String username) {
		Connection connection = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			//1.连接数据库
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/jeffery", "root", "root");
			ps = connection.prepareStatement("select * from my_employees where e_name=?");
			ps.setString(1, username);
			//2.查询数据库
			rs = ps.executeQuery();
			//3.判断用户名是否存在
			if(rs.next()) { //如果为true就说明可以查到数据。
				return true; //查询的数据存在
			}else {
				return false; //查询的数据不存在
			}
		} catch (ClassNotFoundException | SQLException e) {
			throw new RuntimeException();
		} finally {
			//关资源
			if(connection != null) {
				try {
					connection.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(ps != null) {
				try {
					ps.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(rs != null) {
				try {
					rs.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
	}

}
```

2. Servlet 部分代码

```java
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class CheckUserNameServlet
 */
public class CheckUserNameServlet extends HttpServlet {

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 1.获取请求参数
		String username = request.getParameter("username");
		// 2.去数据库查询该名字是否可用
		UserDaoImplmt userDao = new UserDaoImplmt();// 注意 ： 在这创建不太合适，因为每次访问都会创建一次对象
		// 3.调用方法检查用户名是否存在
		boolean checkUserName = userDao.checkUserName(username);
		
		response.getWriter().print(checkUserName);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
}
```

3. HTML代码

```html
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<!-- 引入jquery -->
<script type="text/javascript" src="pages/jquery-1.7.2.js"></script>
<style type="text/css">
body {
	background-color: pink;
}
</style>
<script type="text/javascript">

	/*  
		$(function(){}) 相当于  window.onload=function(){}
	*/
	$(function(){
		//获取注册按钮的对象并设置点击事件
		$("#submit").click(function(){
			//校验文本框中的数据
			//1.获取input的对象
			var username = $("#username").val();
			//2.校验 - 正则表达式
			var usernameReg = /^[a-z0-9_-]{3,16}$/; //没有双引号
			if(!usernameReg.test(username)){//检测字符串username是否满足usernameReg的规则，满足返回true
				//alert("用户名格式不正确");
				//将错误内容填充到span标签中
				//获取span节点对象
				$("#msg").text("用户名格式不正确");
				return false; //取消该注册的事件
			}
			
			//获取密码的内容
			var pwd = $("#pwd").val();
			var pwdReg = /^[a-z0-9_-]{6,18}$/;
			//校验是否匹配正则表达式
			if(!pwdReg.test(pwd)){
				alert("密码格式不对");
				return false;
			}
			//获取确认密码
			var rpwd = $("#rpwd").val();
			if(pwd != rpwd){
				alert("两次密码不一致");
				return false;
			}
			
			//获取邮箱内容
			var email = $("#email").val();
			var emailReg = /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/;
			//校验是否匹配正则表达式
			if(!emailReg.test(email)){
				alert("邮箱格式不对");
				return false;
			}
			
		});
		
		
		//给username设置事件
		$("#username").change(function(){//当文本框中的内容发生改变时就会触发此函数
			//获取文本框中的内容
			var username = $("#username").val();
			//将username发送到后台
			$.get("CheckUserNameServlet","username="+username,function(data){
				if(data=="true"){
					$("#msg").text("用户名已经被占用")
				}else{
					$("#msg").text("用户可以使用")
				}
			},"text");
		});
	});
</script>
</head>
<body>
	
	<h1>欢迎注册</h1>
	<form action="../success2.html">
		用户名称 : <input type="text" name="username" id="username"><span id="msg"></span><br>
		用户密码 : <input type="password" name="pwd" id="pwd"><br>
		确认密码 : <input type="password" name="rpwd" id="rpwd"><br>
		用户邮箱 : <input type="text" name="email" id="email"><br>
				<input id="submit" type="submit" value="注册">
	</form>
</body>
</html>
```

